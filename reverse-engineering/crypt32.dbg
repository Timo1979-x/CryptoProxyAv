bp crypt32!CertAddCertificateContextToStore ".printf \"xoxo: crypt32.CertAddCertificateContextToStore\"; k 3; .echo; gc"
bp crypt32!CertAddCertificateLinkToStore ".printf \"xoxo: crypt32.CertAddCertificateLinkToStore\"; k 3; .echo; gc"
bp crypt32!CertAddCRLContextToStore ".printf \"xoxo: crypt32.CertAddCRLContextToStore\"; k 3; .echo; gc"
bp crypt32!CertAddCRLLinkToStore ".printf \"xoxo: crypt32.CertAddCRLLinkToStore\"; k 3; .echo; gc"
bp crypt32!CertAddCTLContextToStore ".printf \"xoxo: crypt32.CertAddCTLContextToStore\"; k 3; .echo; gc"
bp crypt32!CertAddCTLLinkToStore ".printf \"xoxo: crypt32.CertAddCTLLinkToStore\"; k 3; .echo; gc"
bp crypt32!CertAddEncodedCertificateToStore ".printf \"xoxo: crypt32.CertAddEncodedCertificateToStore\"; k 3; .echo; gc"
bp crypt32!CertAddEncodedCertificateToSystemStoreA ".printf \"xoxo: crypt32.CertAddEncodedCertificateToSystemStoreA\"; k 3; .echo; gc"
bp crypt32!CertAddEncodedCertificateToSystemStoreW ".printf \"xoxo: crypt32.CertAddEncodedCertificateToSystemStoreW\"; k 3; .echo; gc"
bp crypt32!CertAddEncodedCRLToStore ".printf \"xoxo: crypt32.CertAddEncodedCRLToStore\"; k 3; .echo; gc"
bp crypt32!CertAddEncodedCTLToStore ".printf \"xoxo: crypt32.CertAddEncodedCTLToStore\"; k 3; .echo; gc"
bp crypt32!CertAddEnhancedKeyUsageIdentifier ".printf \"xoxo: crypt32.CertAddEnhancedKeyUsageIdentifier\"; k 3; .echo; gc"
bp crypt32!CertAddRefServerOcspResponse ".printf \"xoxo: crypt32.CertAddRefServerOcspResponse\"; k 3; .echo; gc"
bp crypt32!CertAddRefServerOcspResponseContext ".printf \"xoxo: crypt32.CertAddRefServerOcspResponseContext\"; k 3; .echo; gc"
bp crypt32!CertAddSerializedElementToStore ".printf \"xoxo: crypt32.CertAddSerializedElementToStore\"; k 3; .echo; gc"
bp crypt32!CertAddStoreToCollection ".printf \"xoxo: crypt32.CertAddStoreToCollection\"; k 3; .echo; gc"
* bp crypt32!CertAlgIdToOID ".printf \"xoxo: crypt32.CertAlgIdToOID\"; k 3; .echo; gc"
bp crypt32!CertCloseServerOcspResponse ".printf \"xoxo: crypt32.CertCloseServerOcspResponse\"; k 3; .echo; gc"
bp crypt32!CertCloseStore ".printf \"xoxo: crypt32.CertCloseStore\"; k 3; .echo; gc"
bp crypt32!CertCompareCertificate ".printf \"xoxo: crypt32.CertCompareCertificate\"; k 3; .echo; gc"
bp crypt32!CertCompareCertificateName ".printf \"xoxo: crypt32.CertCompareCertificateName\"; k 3; .echo; gc"
bp crypt32!CertCompareIntegerBlob ".printf \"xoxo: crypt32.CertCompareIntegerBlob\"; k 3; .echo; gc"
bp crypt32!CertComparePublicKeyInfo ".printf \"xoxo: crypt32.CertComparePublicKeyInfo\"; k 3; .echo; gc"
bp crypt32!CertControlStore ".printf \"xoxo: crypt32.CertControlStore\"; k 3; .echo; gc"
bp crypt32!CertCreateCertificateChainEngine ".printf \"xoxo: crypt32.CertCreateCertificateChainEngine\"; k 3; .echo; gc"
bp crypt32!CertCreateCertificateContext ".printf \"xoxo: crypt32.CertCreateCertificateContext\"; k 3; .echo; gc"
bp crypt32!CertCreateContext ".printf \"xoxo: crypt32.CertCreateContext\"; k 3; .echo; gc"
bp crypt32!CertCreateCRLContext ".printf \"xoxo: crypt32.CertCreateCRLContext\"; k 3; .echo; gc"
bp crypt32!CertCreateCTLContext ".printf \"xoxo: crypt32.CertCreateCTLContext\"; k 3; .echo; gc"
bp crypt32!CertCreateCTLEntryFromCertificateContextProperties ".printf \"xoxo: crypt32.CertCreateCTLEntryFromCertificateContextProperties\"; k 3; .echo; gc"
bp crypt32!CertCreateSelfSignCertificate ".printf \"xoxo: crypt32.CertCreateSelfSignCertificate\"; k 3; .echo; gc"
bp crypt32!CertDeleteCertificateFromStore ".printf \"xoxo: crypt32.CertDeleteCertificateFromStore\"; k 3; .echo; gc"
bp crypt32!CertDeleteCRLFromStore ".printf \"xoxo: crypt32.CertDeleteCRLFromStore\"; k 3; .echo; gc"
bp crypt32!CertDeleteCTLFromStore ".printf \"xoxo: crypt32.CertDeleteCTLFromStore\"; k 3; .echo; gc"
bp crypt32!CertDuplicateCertificateChain ".printf \"xoxo: crypt32.CertDuplicateCertificateChain\"; k 3; .echo; gc"
bp crypt32!CertDuplicateCertificateContext ".printf \"xoxo: crypt32.CertDuplicateCertificateContext\"; k 3; .echo; gc"
bp crypt32!CertDuplicateCRLContext ".printf \"xoxo: crypt32.CertDuplicateCRLContext\"; k 3; .echo; gc"
bp crypt32!CertDuplicateCTLContext ".printf \"xoxo: crypt32.CertDuplicateCTLContext\"; k 3; .echo; gc"
bp crypt32!CertDuplicateStore ".printf \"xoxo: crypt32.CertDuplicateStore\"; k 3; .echo; gc"
bp crypt32!CertEnumCertificateContextProperties ".printf \"xoxo: crypt32.CertEnumCertificateContextProperties\"; k 3; .echo; gc"
bp crypt32!CertEnumCertificatesInStore ".printf \"xoxo: crypt32.CertEnumCertificatesInStore\"; k 3; .echo; gc"
bp crypt32!CertEnumCRLContextProperties ".printf \"xoxo: crypt32.CertEnumCRLContextProperties\"; k 3; .echo; gc"
bp crypt32!CertEnumCRLsInStore ".printf \"xoxo: crypt32.CertEnumCRLsInStore\"; k 3; .echo; gc"
bp crypt32!CertEnumCTLContextProperties ".printf \"xoxo: crypt32.CertEnumCTLContextProperties\"; k 3; .echo; gc"
bp crypt32!CertEnumCTLsInStore ".printf \"xoxo: crypt32.CertEnumCTLsInStore\"; k 3; .echo; gc"
bp crypt32!CertEnumPhysicalStore ".printf \"xoxo: crypt32.CertEnumPhysicalStore\"; k 3; .echo; gc"
bp crypt32!CertEnumSubjectInSortedCTL ".printf \"xoxo: crypt32.CertEnumSubjectInSortedCTL\"; k 3; .echo; gc"
bp crypt32!CertEnumSystemStore ".printf \"xoxo: crypt32.CertEnumSystemStore\"; k 3; .echo; gc"
bp crypt32!CertEnumSystemStoreLocation ".printf \"xoxo: crypt32.CertEnumSystemStoreLocation\"; k 3; .echo; gc"
bp crypt32!CertFindAttribute ".printf \"xoxo: crypt32.CertFindAttribute\"; k 3; .echo; gc"
bp crypt32!CertFindCertificateInCRL ".printf \"xoxo: crypt32.CertFindCertificateInCRL\"; k 3; .echo; gc"
bp crypt32!CertFindCertificateInStore ".printf \"xoxo: crypt32.CertFindCertificateInStore\"; k 3; .echo; gc"
bp crypt32!CertFindChainInStore ".printf \"xoxo: crypt32.CertFindChainInStore\"; k 3; .echo; gc"
bp crypt32!CertFindCRLInStore ".printf \"xoxo: crypt32.CertFindCRLInStore\"; k 3; .echo; gc"
bp crypt32!CertFindCTLInStore ".printf \"xoxo: crypt32.CertFindCTLInStore\"; k 3; .echo; gc"
bp crypt32!CertFindExtension ".printf \"xoxo: crypt32.CertFindExtension\"; k 3; .echo; gc"
bp crypt32!CertFindRDNAttr ".printf \"xoxo: crypt32.CertFindRDNAttr\"; k 3; .echo; gc"
bp crypt32!CertFindSubjectInCTL ".printf \"xoxo: crypt32.CertFindSubjectInCTL\"; k 3; .echo; gc"
bp crypt32!CertFindSubjectInSortedCTL ".printf \"xoxo: crypt32.CertFindSubjectInSortedCTL\"; k 3; .echo; gc"
bp crypt32!CertFreeCertificateChain ".printf \"xoxo: crypt32.CertFreeCertificateChain\"; k 3; .echo; gc"
bp crypt32!CertFreeCertificateChainEngine ".printf \"xoxo: crypt32.CertFreeCertificateChainEngine\"; k 3; .echo; gc"
bp crypt32!CertFreeCertificateChainList ".printf \"xoxo: crypt32.CertFreeCertificateChainList\"; k 3; .echo; gc"
bp crypt32!CertFreeCertificateContext ".printf \"xoxo: crypt32.CertFreeCertificateContext\"; k 3; .echo; gc"
bp crypt32!CertFreeCRLContext ".printf \"xoxo: crypt32.CertFreeCRLContext\"; k 3; .echo; gc"
bp crypt32!CertFreeCTLContext ".printf \"xoxo: crypt32.CertFreeCTLContext\"; k 3; .echo; gc"
bp crypt32!CertFreeServerOcspResponseContext ".printf \"xoxo: crypt32.CertFreeServerOcspResponseContext\"; k 3; .echo; gc"
bp crypt32!CertGetCertificateChain ".printf \"xoxo: crypt32.CertGetCertificateChain\"; k 3; .echo; gc"
bp crypt32!CertGetCertificateContextProperty ".printf \"xoxo: crypt32.CertGetCertificateContextProperty\"; k 3; .echo; gc"
bp crypt32!CertGetCRLContextProperty ".printf \"xoxo: crypt32.CertGetCRLContextProperty\"; k 3; .echo; gc"
bp crypt32!CertGetCRLFromStore ".printf \"xoxo: crypt32.CertGetCRLFromStore\"; k 3; .echo; gc"
bp crypt32!CertGetCTLContextProperty ".printf \"xoxo: crypt32.CertGetCTLContextProperty\"; k 3; .echo; gc"
bp crypt32!CertGetEnhancedKeyUsage ".printf \"xoxo: crypt32.CertGetEnhancedKeyUsage\"; k 3; .echo; gc"
bp crypt32!CertGetIntendedKeyUsage ".printf \"xoxo: crypt32.CertGetIntendedKeyUsage\"; k 3; .echo; gc"
bp crypt32!CertGetIssuerCertificateFromStore ".printf \"xoxo: crypt32.CertGetIssuerCertificateFromStore\"; k 3; .echo; gc"
bp crypt32!CertGetNameStringA ".printf \"xoxo: crypt32.CertGetNameStringA\"; k 3; .echo; gc"
bp crypt32!CertGetNameStringW ".printf \"xoxo: crypt32.CertGetNameStringW\"; k 3; .echo; gc"
bp crypt32!CertGetPublicKeyLength ".printf \"xoxo: crypt32.CertGetPublicKeyLength\"; k 3; .echo; gc"
bp crypt32!CertGetServerOcspResponseContext ".printf \"xoxo: crypt32.CertGetServerOcspResponseContext\"; k 3; .echo; gc"
bp crypt32!CertGetStoreProperty ".printf \"xoxo: crypt32.CertGetStoreProperty\"; k 3; .echo; gc"
bp crypt32!CertGetSubjectCertificateFromStore ".printf \"xoxo: crypt32.CertGetSubjectCertificateFromStore\"; k 3; .echo; gc"
bp crypt32!CertGetValidUsages ".printf \"xoxo: crypt32.CertGetValidUsages\"; k 3; .echo; gc"
bp crypt32!CertIsRDNAttrsInCertificateName ".printf \"xoxo: crypt32.CertIsRDNAttrsInCertificateName\"; k 3; .echo; gc"
bp crypt32!CertIsStrongHashToSign ".printf \"xoxo: crypt32.CertIsStrongHashToSign\"; k 3; .echo; gc"
bp crypt32!CertIsValidCRLForCertificate ".printf \"xoxo: crypt32.CertIsValidCRLForCertificate\"; k 3; .echo; gc"
bp crypt32!CertIsWeakHash ".printf \"xoxo: crypt32.CertIsWeakHash\"; k 3; .echo; gc"
bp crypt32!CertNameToStrA ".printf \"xoxo: crypt32.CertNameToStrA\"; k 3; .echo; gc"
bp crypt32!CertNameToStrW ".printf \"xoxo: crypt32.CertNameToStrW\"; k 3; .echo; gc"
bp crypt32!CertOIDToAlgId ".printf \"xoxo: crypt32.CertOIDToAlgId\"; k 3; .echo; gc"
bp crypt32!CertOpenServerOcspResponse ".printf \"xoxo: crypt32.CertOpenServerOcspResponse\"; k 3; .echo; gc"
bp crypt32!CertOpenStore ".printf \"xoxo: crypt32.CertOpenStore\"; k 3; .echo; gc"
bp crypt32!CertOpenSystemStoreA ".printf \"xoxo: crypt32.CertOpenSystemStoreA\"; k 3; .echo; gc"
bp crypt32!CertOpenSystemStoreW ".printf \"xoxo: crypt32.CertOpenSystemStoreW\"; k 3; .echo; gc"
bp crypt32!CertRDNValueToStrA ".printf \"xoxo: crypt32.CertRDNValueToStrA\"; k 3; .echo; gc"
bp crypt32!CertRDNValueToStrW ".printf \"xoxo: crypt32.CertRDNValueToStrW\"; k 3; .echo; gc"
bp crypt32!CertRegisterPhysicalStore ".printf \"xoxo: crypt32.CertRegisterPhysicalStore\"; k 3; .echo; gc"
bp crypt32!CertRegisterSystemStore ".printf \"xoxo: crypt32.CertRegisterSystemStore\"; k 3; .echo; gc"
bp crypt32!CertRemoveEnhancedKeyUsageIdentifier ".printf \"xoxo: crypt32.CertRemoveEnhancedKeyUsageIdentifier\"; k 3; .echo; gc"
bp crypt32!CertRemoveStoreFromCollection ".printf \"xoxo: crypt32.CertRemoveStoreFromCollection\"; k 3; .echo; gc"
bp crypt32!CertResyncCertificateChainEngine ".printf \"xoxo: crypt32.CertResyncCertificateChainEngine\"; k 3; .echo; gc"
bp crypt32!CertRetrieveLogoOrBiometricInfo ".printf \"xoxo: crypt32.CertRetrieveLogoOrBiometricInfo\"; k 3; .echo; gc"
bp crypt32!CertSaveStore ".printf \"xoxo: crypt32.CertSaveStore\"; k 3; .echo; gc"
bp crypt32!CertSelectCertificateChains ".printf \"xoxo: crypt32.CertSelectCertificateChains\"; k 3; .echo; gc"
bp crypt32!CertSerializeCertificateStoreElement ".printf \"xoxo: crypt32.CertSerializeCertificateStoreElement\"; k 3; .echo; gc"
bp crypt32!CertSerializeCRLStoreElement ".printf \"xoxo: crypt32.CertSerializeCRLStoreElement\"; k 3; .echo; gc"
bp crypt32!CertSerializeCTLStoreElement ".printf \"xoxo: crypt32.CertSerializeCTLStoreElement\"; k 3; .echo; gc"
bp crypt32!CertSetCertificateContextPropertiesFromCTLEntry ".printf \"xoxo: crypt32.CertSetCertificateContextPropertiesFromCTLEntry\"; k 3; .echo; gc"
bp crypt32!CertSetCertificateContextProperty ".printf \"xoxo: crypt32.CertSetCertificateContextProperty\"; k 3; .echo; gc"
bp crypt32!CertSetCRLContextProperty ".printf \"xoxo: crypt32.CertSetCRLContextProperty\"; k 3; .echo; gc"
bp crypt32!CertSetCTLContextProperty ".printf \"xoxo: crypt32.CertSetCTLContextProperty\"; k 3; .echo; gc"
bp crypt32!CertSetEnhancedKeyUsage ".printf \"xoxo: crypt32.CertSetEnhancedKeyUsage\"; k 3; .echo; gc"
bp crypt32!CertSetStoreProperty ".printf \"xoxo: crypt32.CertSetStoreProperty\"; k 3; .echo; gc"
bp crypt32!CertStrToNameA ".printf \"xoxo: crypt32.CertStrToNameA\"; k 3; .echo; gc"
bp crypt32!CertStrToNameW ".printf \"xoxo: crypt32.CertStrToNameW\"; k 3; .echo; gc"
bp crypt32!CertUnregisterPhysicalStore ".printf \"xoxo: crypt32.CertUnregisterPhysicalStore\"; k 3; .echo; gc"
bp crypt32!CertUnregisterSystemStore ".printf \"xoxo: crypt32.CertUnregisterSystemStore\"; k 3; .echo; gc"
bp crypt32!CertVerifyCertificateChainPolicy ".printf \"xoxo: crypt32.CertVerifyCertificateChainPolicy\"; k 3; .echo; gc"
bp crypt32!CertVerifyCRLRevocation ".printf \"xoxo: crypt32.CertVerifyCRLRevocation\"; k 3; .echo; gc"
bp crypt32!CertVerifyCRLTimeValidity ".printf \"xoxo: crypt32.CertVerifyCRLTimeValidity\"; k 3; .echo; gc"
bp crypt32!CertVerifyCTLUsage ".printf \"xoxo: crypt32.CertVerifyCTLUsage\"; k 3; .echo; gc"
bp crypt32!CertVerifyRevocation ".printf \"xoxo: crypt32.CertVerifyRevocation\"; k 3; .echo; gc"
bp crypt32!CertVerifySubjectCertificateContext ".printf \"xoxo: crypt32.CertVerifySubjectCertificateContext\"; k 3; .echo; gc"
bp crypt32!CertVerifyTimeValidity ".printf \"xoxo: crypt32.CertVerifyTimeValidity\"; k 3; .echo; gc"
bp crypt32!CertVerifyValidityNesting ".printf \"xoxo: crypt32.CertVerifyValidityNesting\"; k 3; .echo; gc"
bp crypt32!CryptAcquireCertificatePrivateKey ".printf \"xoxo: crypt32.CryptAcquireCertificatePrivateKey\"; k 3; .echo; gc"
bp crypt32!CryptBinaryToStringA ".printf \"xoxo: crypt32.CryptBinaryToStringA\"; k 3; .echo; gc"
bp crypt32!CryptBinaryToStringW ".printf \"xoxo: crypt32.CryptBinaryToStringW\"; k 3; .echo; gc"
bp crypt32!CryptCloseAsyncHandle ".printf \"xoxo: crypt32.CryptCloseAsyncHandle\"; k 3; .echo; gc"
bp crypt32!CryptCreateAsyncHandle ".printf \"xoxo: crypt32.CryptCreateAsyncHandle\"; k 3; .echo; gc"
bp crypt32!CryptCreateKeyIdentifierFromCSP ".printf \"xoxo: crypt32.CryptCreateKeyIdentifierFromCSP\"; k 3; .echo; gc"
bp crypt32!CryptDecodeMessage ".printf \"xoxo: crypt32.CryptDecodeMessage\"; k 3; .echo; gc"
* bp crypt32!CryptDecodeObject ".printf \"xoxo: crypt32.CryptDecodeObject\"; k 3; .echo; gc"
* bp crypt32!CryptDecodeObjectEx ".printf \"xoxo: crypt32.CryptDecodeObjectEx\"; k 3; .echo; gc"
bp crypt32!CryptDecryptAndVerifyMessageSignature ".printf \"xoxo: crypt32.CryptDecryptAndVerifyMessageSignature\"; k 3; .echo; gc"
bp crypt32!CryptDecryptMessage ".printf \"xoxo: crypt32.CryptDecryptMessage\"; k 3; .echo; gc"
bp crypt32!CryptEncodeObject ".printf \"xoxo: crypt32.CryptEncodeObject\"; k 3; .echo; gc"
bp crypt32!CryptEncodeObjectEx ".printf \"xoxo: crypt32.CryptEncodeObjectEx\"; k 3; .echo; gc"
bp crypt32!CryptEncryptMessage ".printf \"xoxo: crypt32.CryptEncryptMessage\"; k 3; .echo; gc"
bp crypt32!CryptEnumKeyIdentifierProperties ".printf \"xoxo: crypt32.CryptEnumKeyIdentifierProperties\"; k 3; .echo; gc"
bp crypt32!CryptEnumOIDFunction ".printf \"xoxo: crypt32.CryptEnumOIDFunction\"; k 3; .echo; gc"
bp crypt32!CryptEnumOIDInfo ".printf \"xoxo: crypt32.CryptEnumOIDInfo\"; k 3; .echo; gc"
bp crypt32!CryptExportPKCS8 ".printf \"xoxo: crypt32.CryptExportPKCS8\"; k 3; .echo; gc"
bp crypt32!CryptExportPublicKeyInfo ".printf \"xoxo: crypt32.CryptExportPublicKeyInfo\"; k 3; .echo; gc"
bp crypt32!CryptExportPublicKeyInfoEx ".printf \"xoxo: crypt32.CryptExportPublicKeyInfoEx\"; k 3; .echo; gc"
bp crypt32!CryptExportPublicKeyInfoFromBCryptKeyHandle ".printf \"xoxo: crypt32.CryptExportPublicKeyInfoFromBCryptKeyHandle\"; k 3; .echo; gc"
bp crypt32!CryptFindCertificateKeyProvInfo ".printf \"xoxo: crypt32.CryptFindCertificateKeyProvInfo\"; k 3; .echo; gc"
bp crypt32!CryptFindLocalizedName ".printf \"xoxo: crypt32.CryptFindLocalizedName\"; k 3; .echo; gc"
* bp crypt32!CryptFindOIDInfo ".printf \"xoxo: crypt32.CryptFindOIDInfo\"; k 3; .echo; gc"
bp crypt32!CryptFormatObject ".printf \"xoxo: crypt32.CryptFormatObject\"; k 3; .echo; gc"
bp crypt32!CryptFreeOIDFunctionAddress ".printf \"xoxo: crypt32.CryptFreeOIDFunctionAddress\"; k 3; .echo; gc"
bp crypt32!CryptGetAsyncParam ".printf \"xoxo: crypt32.CryptGetAsyncParam\"; k 3; .echo; gc"
bp crypt32!CryptGetDefaultOIDDllList ".printf \"xoxo: crypt32.CryptGetDefaultOIDDllList\"; k 3; .echo; gc"
bp crypt32!CryptGetDefaultOIDFunctionAddress ".printf \"xoxo: crypt32.CryptGetDefaultOIDFunctionAddress\"; k 3; .echo; gc"
bp crypt32!CryptGetKeyIdentifierProperty ".printf \"xoxo: crypt32.CryptGetKeyIdentifierProperty\"; k 3; .echo; gc"
bp crypt32!CryptGetMessageCertificates ".printf \"xoxo: crypt32.CryptGetMessageCertificates\"; k 3; .echo; gc"
bp crypt32!CryptGetMessageSignerCount ".printf \"xoxo: crypt32.CryptGetMessageSignerCount\"; k 3; .echo; gc"
bp crypt32!CryptGetOIDFunctionAddress ".printf \"xoxo: crypt32.CryptGetOIDFunctionAddress\"; k 3; .echo; gc"
bp crypt32!CryptGetOIDFunctionValue ".printf \"xoxo: crypt32.CryptGetOIDFunctionValue\"; k 3; .echo; gc"
bp crypt32!CryptHashCertificate ".printf \"xoxo: crypt32.CryptHashCertificate\"; k 3; .echo; gc"
bp crypt32!CryptHashCertificate2 ".printf \"xoxo: crypt32.CryptHashCertificate2\"; k 3; .echo; gc"
bp crypt32!CryptHashMessage ".printf \"xoxo: crypt32.CryptHashMessage\"; k 3; .echo; gc"
bp crypt32!CryptHashPublicKeyInfo ".printf \"xoxo: crypt32.CryptHashPublicKeyInfo\"; k 3; .echo; gc"
bp crypt32!CryptHashToBeSigned ".printf \"xoxo: crypt32.CryptHashToBeSigned\"; k 3; .echo; gc"
bp crypt32!CryptImportPKCS8 ".printf \"xoxo: crypt32.CryptImportPKCS8\"; k 3; .echo; gc"
bp crypt32!CryptImportPublicKeyInfo ".printf \"xoxo: crypt32.CryptImportPublicKeyInfo\"; k 3; .echo; gc"
bp crypt32!CryptImportPublicKeyInfoEx ".printf \"xoxo: crypt32.CryptImportPublicKeyInfoEx\"; k 3; .echo; gc"
bp crypt32!CryptImportPublicKeyInfoEx2 ".printf \"xoxo: crypt32.CryptImportPublicKeyInfoEx2\"; k 3; .echo; gc"
bp crypt32!CryptInitOIDFunctionSet ".printf \"xoxo: crypt32.CryptInitOIDFunctionSet\"; k 3; .echo; gc"
bp crypt32!CryptInstallDefaultContext ".printf \"xoxo: crypt32.CryptInstallDefaultContext\"; k 3; .echo; gc"
bp crypt32!CryptInstallOIDFunctionAddress ".printf \"xoxo: crypt32.CryptInstallOIDFunctionAddress\"; k 3; .echo; gc"
bp crypt32!CryptLoadSip ".printf \"xoxo: crypt32.CryptLoadSip\"; k 3; .echo; gc"
bp crypt32!CryptMemAlloc ".printf \"xoxo: crypt32.CryptMemAlloc\"; k 3; .echo; gc"
* bp crypt32!CryptMemFree ".printf \"xoxo: crypt32.CryptMemFree\"; k 3; .echo; gc"
bp crypt32!CryptMemRealloc ".printf \"xoxo: crypt32.CryptMemRealloc\"; k 3; .echo; gc"
bp crypt32!CryptMsgCalculateEncodedLength ".printf \"xoxo: crypt32.CryptMsgCalculateEncodedLength\"; k 3; .echo; gc"
bp crypt32!CryptMsgClose ".printf \"xoxo: crypt32.CryptMsgClose\"; k 3; .echo; gc"
bp crypt32!CryptMsgControl ".printf \"xoxo: crypt32.CryptMsgControl\"; k 3; .echo; gc"
bp crypt32!CryptMsgCountersign ".printf \"xoxo: crypt32.CryptMsgCountersign\"; k 3; .echo; gc"
bp crypt32!CryptMsgCountersignEncoded ".printf \"xoxo: crypt32.CryptMsgCountersignEncoded\"; k 3; .echo; gc"
bp crypt32!CryptMsgDuplicate ".printf \"xoxo: crypt32.CryptMsgDuplicate\"; k 3; .echo; gc"
bp crypt32!CryptMsgEncodeAndSignCTL ".printf \"xoxo: crypt32.CryptMsgEncodeAndSignCTL\"; k 3; .echo; gc"
bp crypt32!CryptMsgGetAndVerifySigner ".printf \"xoxo: crypt32.CryptMsgGetAndVerifySigner\"; k 3; .echo; gc"
bp crypt32!CryptMsgGetParam ".printf \"xoxo: crypt32.CryptMsgGetParam\"; k 3; .echo; gc"
bp crypt32!CryptMsgOpenToDecode ".printf \"xoxo: crypt32.CryptMsgOpenToDecode\"; k 3; .echo; gc"
bp crypt32!CryptMsgOpenToEncode ".printf \"xoxo: crypt32.CryptMsgOpenToEncode\"; k 3; .echo; gc"
bp crypt32!CryptMsgSignCTL ".printf \"xoxo: crypt32.CryptMsgSignCTL\"; k 3; .echo; gc"
bp crypt32!CryptMsgUpdate ".printf \"xoxo: crypt32.CryptMsgUpdate\"; k 3; .echo; gc"
bp crypt32!CryptMsgVerifyCountersignatureEncoded ".printf \"xoxo: crypt32.CryptMsgVerifyCountersignatureEncoded\"; k 3; .echo; gc"
bp crypt32!CryptMsgVerifyCountersignatureEncodedEx ".printf \"xoxo: crypt32.CryptMsgVerifyCountersignatureEncodedEx\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorFree ".printf \"xoxo: crypt32.CryptObjectLocatorFree\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorGet ".printf \"xoxo: crypt32.CryptObjectLocatorGet\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorGetContent ".printf \"xoxo: crypt32.CryptObjectLocatorGetContent\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorGetUpdated ".printf \"xoxo: crypt32.CryptObjectLocatorGetUpdated\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorInitialize ".printf \"xoxo: crypt32.CryptObjectLocatorInitialize\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorIsChanged ".printf \"xoxo: crypt32.CryptObjectLocatorIsChanged\"; k 3; .echo; gc"
bp crypt32!CryptObjectLocatorRelease ".printf \"xoxo: crypt32.CryptObjectLocatorRelease\"; k 3; .echo; gc"
bp crypt32!CryptProtectData ".printf \"xoxo: crypt32.CryptProtectData\"; k 3; .echo; gc"
bp crypt32!CryptQueryObject ".printf \"xoxo: crypt32.CryptQueryObject\"; k 3; .echo; gc"
bp crypt32!CryptRegisterDefaultOIDFunction ".printf \"xoxo: crypt32.CryptRegisterDefaultOIDFunction\"; k 3; .echo; gc"
bp crypt32!CryptRegisterOIDFunction ".printf \"xoxo: crypt32.CryptRegisterOIDFunction\"; k 3; .echo; gc"
bp crypt32!CryptRegisterOIDInfo ".printf \"xoxo: crypt32.CryptRegisterOIDInfo\"; k 3; .echo; gc"
bp crypt32!CryptRetrieveTimeStamp ".printf \"xoxo: crypt32.CryptRetrieveTimeStamp\"; k 3; .echo; gc"
bp crypt32!CryptSetAsyncParam ".printf \"xoxo: crypt32.CryptSetAsyncParam\"; k 3; .echo; gc"
bp crypt32!CryptSetKeyIdentifierProperty ".printf \"xoxo: crypt32.CryptSetKeyIdentifierProperty\"; k 3; .echo; gc"
bp crypt32!CryptSetOIDFunctionValue ".printf \"xoxo: crypt32.CryptSetOIDFunctionValue\"; k 3; .echo; gc"
bp crypt32!CryptSignAndEncodeCertificate ".printf \"xoxo: crypt32.CryptSignAndEncodeCertificate\"; k 3; .echo; gc"
bp crypt32!CryptSignAndEncryptMessage ".printf \"xoxo: crypt32.CryptSignAndEncryptMessage\"; k 3; .echo; gc"
bp crypt32!CryptSignCertificate ".printf \"xoxo: crypt32.CryptSignCertificate\"; k 3; .echo; gc"
bp crypt32!CryptSignMessage ".printf \"xoxo: crypt32.CryptSignMessage\"; k 3; .echo; gc"
bp crypt32!CryptSignMessageWithKey ".printf \"xoxo: crypt32.CryptSignMessageWithKey\"; k 3; .echo; gc"
bp crypt32!CryptSIPAddProvider ".printf \"xoxo: crypt32.CryptSIPAddProvider\"; k 3; .echo; gc"
bp crypt32!CryptSIPCreateIndirectData ".printf \"xoxo: crypt32.CryptSIPCreateIndirectData\"; k 3; .echo; gc"
bp crypt32!CryptSIPGetCaps ".printf \"xoxo: crypt32.CryptSIPGetCaps\"; k 3; .echo; gc"
bp crypt32!CryptSIPGetSealedDigest ".printf \"xoxo: crypt32.CryptSIPGetSealedDigest\"; k 3; .echo; gc"
bp crypt32!CryptSIPGetSignedDataMsg ".printf \"xoxo: crypt32.CryptSIPGetSignedDataMsg\"; k 3; .echo; gc"
bp crypt32!CryptSIPLoad ".printf \"xoxo: crypt32.CryptSIPLoad\"; k 3; .echo; gc"
bp crypt32!CryptSIPPutSignedDataMsg ".printf \"xoxo: crypt32.CryptSIPPutSignedDataMsg\"; k 3; .echo; gc"
bp crypt32!CryptSIPRemoveProvider ".printf \"xoxo: crypt32.CryptSIPRemoveProvider\"; k 3; .echo; gc"
bp crypt32!CryptSIPRemoveSignedDataMsg ".printf \"xoxo: crypt32.CryptSIPRemoveSignedDataMsg\"; k 3; .echo; gc"
bp crypt32!CryptSIPRetrieveSubjectGuid ".printf \"xoxo: crypt32.CryptSIPRetrieveSubjectGuid\"; k 3; .echo; gc"
bp crypt32!CryptSIPRetrieveSubjectGuidForCatalogFile ".printf \"xoxo: crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile\"; k 3; .echo; gc"
bp crypt32!CryptSIPVerifyIndirectData ".printf \"xoxo: crypt32.CryptSIPVerifyIndirectData\"; k 3; .echo; gc"
bp crypt32!CryptStringToBinaryA ".printf \"xoxo: crypt32.CryptStringToBinaryA\"; k 3; .echo; gc"
bp crypt32!CryptStringToBinaryW ".printf \"xoxo: crypt32.CryptStringToBinaryW\"; k 3; .echo; gc"
bp crypt32!CryptUninstallDefaultContext ".printf \"xoxo: crypt32.CryptUninstallDefaultContext\"; k 3; .echo; gc"
bp crypt32!CryptUnprotectData ".printf \"xoxo: crypt32.CryptUnprotectData\"; k 3; .echo; gc"
bp crypt32!CryptUnregisterDefaultOIDFunction ".printf \"xoxo: crypt32.CryptUnregisterDefaultOIDFunction\"; k 3; .echo; gc"
bp crypt32!CryptUnregisterOIDFunction ".printf \"xoxo: crypt32.CryptUnregisterOIDFunction\"; k 3; .echo; gc"
bp crypt32!CryptUnregisterOIDInfo ".printf \"xoxo: crypt32.CryptUnregisterOIDInfo\"; k 3; .echo; gc"
bp crypt32!CryptVerifyCertificateSignature ".printf \"xoxo: crypt32.CryptVerifyCertificateSignature\"; k 3; .echo; gc"
bp crypt32!CryptVerifyCertificateSignatureEx ".printf \"xoxo: crypt32.CryptVerifyCertificateSignatureEx\"; k 3; .echo; gc"
bp crypt32!CryptVerifyDetachedMessageHash ".printf \"xoxo: crypt32.CryptVerifyDetachedMessageHash\"; k 3; .echo; gc"
bp crypt32!CryptVerifyDetachedMessageSignature ".printf \"xoxo: crypt32.CryptVerifyDetachedMessageSignature\"; k 3; .echo; gc"
bp crypt32!CryptVerifyMessageHash ".printf \"xoxo: crypt32.CryptVerifyMessageHash\"; k 3; .echo; gc"
bp crypt32!CryptVerifyMessageSignature ".printf \"xoxo: crypt32.CryptVerifyMessageSignature\"; k 3; .echo; gc"
bp crypt32!CryptVerifyMessageSignatureWithKey ".printf \"xoxo: crypt32.CryptVerifyMessageSignatureWithKey\"; k 3; .echo; gc"
bp crypt32!CryptVerifyTimeStampSignature ".printf \"xoxo: crypt32.CryptVerifyTimeStampSignature\"; k 3; .echo; gc"
bp crypt32!I_CertChainEngineIsDisallowedCertificate ".printf \"xoxo: crypt32.I_CertChainEngineIsDisallowedCertificate\"; k 3; .echo; gc"
bp crypt32!I_CertDiagControl ".printf \"xoxo: crypt32.I_CertDiagControl\"; k 3; .echo; gc"
bp crypt32!I_CertFinishSslHandshake ".printf \"xoxo: crypt32.I_CertFinishSslHandshake\"; k 3; .echo; gc"
bp crypt32!I_CertProcessSslHandshake ".printf \"xoxo: crypt32.I_CertProcessSslHandshake\"; k 3; .echo; gc"
bp crypt32!I_CertProtectFunction ".printf \"xoxo: crypt32.I_CertProtectFunction\"; k 3; .echo; gc"
bp crypt32!I_CertSrvProtectFunction ".printf \"xoxo: crypt32.I_CertSrvProtectFunction\"; k 3; .echo; gc"
bp crypt32!I_CertSyncStore ".printf \"xoxo: crypt32.I_CertSyncStore\"; k 3; .echo; gc"
bp crypt32!I_CertUpdateStore ".printf \"xoxo: crypt32.I_CertUpdateStore\"; k 3; .echo; gc"
bp crypt32!I_CertWnfEnableFlushCache ".printf \"xoxo: crypt32.I_CertWnfEnableFlushCache\"; k 3; .echo; gc"
bp crypt32!I_CryptAddRefLruEntry ".printf \"xoxo: crypt32.I_CryptAddRefLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptAddSmartCardCertToStore ".printf \"xoxo: crypt32.I_CryptAddSmartCardCertToStore\"; k 3; .echo; gc"
bp crypt32!I_CryptAllocTls ".printf \"xoxo: crypt32.I_CryptAllocTls\"; k 3; .echo; gc"
* bp crypt32!I_CryptAllocTlsEx ".printf \"xoxo: crypt32.I_CryptAllocTlsEx\"; k 3; .echo; gc"
bp crypt32!I_CryptCreateLruCache ".printf \"xoxo: crypt32.I_CryptCreateLruCache\"; k 3; .echo; gc"
bp crypt32!I_CryptCreateLruEntry ".printf \"xoxo: crypt32.I_CryptCreateLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptDetachTls ".printf \"xoxo: crypt32.I_CryptDetachTls\"; k 3; .echo; gc"
bp crypt32!I_CryptDisableLruOfEntries ".printf \"xoxo: crypt32.I_CryptDisableLruOfEntries\"; k 3; .echo; gc"
bp crypt32!I_CryptEnableLruOfEntries ".printf \"xoxo: crypt32.I_CryptEnableLruOfEntries\"; k 3; .echo; gc"
bp crypt32!I_CryptEnumMatchingLruEntries ".printf \"xoxo: crypt32.I_CryptEnumMatchingLruEntries\"; k 3; .echo; gc"
bp crypt32!I_CryptFindLruEntry ".printf \"xoxo: crypt32.I_CryptFindLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptFindLruEntryData ".printf \"xoxo: crypt32.I_CryptFindLruEntryData\"; k 3; .echo; gc"
bp crypt32!I_CryptFindSmartCardCertInStore ".printf \"xoxo: crypt32.I_CryptFindSmartCardCertInStore\"; k 3; .echo; gc"
bp crypt32!I_CryptFlushLruCache ".printf \"xoxo: crypt32.I_CryptFlushLruCache\"; k 3; .echo; gc"
bp crypt32!I_CryptFreeLruCache ".printf \"xoxo: crypt32.I_CryptFreeLruCache\"; k 3; .echo; gc"
bp crypt32!I_CryptFreeTls ".printf \"xoxo: crypt32.I_CryptFreeTls\"; k 3; .echo; gc"
* bp crypt32!I_CryptGetAsn1Decoder ".printf \"xoxo: crypt32.I_CryptGetAsn1Decoder\"; k 3; .echo; gc"
bp crypt32!I_CryptGetAsn1Encoder ".printf \"xoxo: crypt32.I_CryptGetAsn1Encoder\"; k 3; .echo; gc"
bp crypt32!I_CryptGetDefaultCryptProv ".printf \"xoxo: crypt32.I_CryptGetDefaultCryptProv\"; k 3; .echo; gc"
bp crypt32!I_CryptGetDefaultCryptProvForEncrypt ".printf \"xoxo: crypt32.I_CryptGetDefaultCryptProvForEncrypt\"; k 3; .echo; gc"
bp crypt32!I_CryptGetFileVersion ".printf \"xoxo: crypt32.I_CryptGetFileVersion\"; k 3; .echo; gc"
bp crypt32!I_CryptGetLruEntryData ".printf \"xoxo: crypt32.I_CryptGetLruEntryData\"; k 3; .echo; gc"
bp crypt32!I_CryptGetLruEntryIdentifier ".printf \"xoxo: crypt32.I_CryptGetLruEntryIdentifier\"; k 3; .echo; gc"
bp crypt32!I_CryptGetOssGlobal ".printf \"xoxo: crypt32.I_CryptGetOssGlobal\"; k 3; .echo; gc"
bp crypt32!I_CryptGetTls ".printf \"xoxo: crypt32.I_CryptGetTls\"; k 3; .echo; gc"
bp crypt32!I_CryptInsertLruEntry ".printf \"xoxo: crypt32.I_CryptInsertLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptInstallAsn1Module ".printf \"xoxo: crypt32.I_CryptInstallAsn1Module\"; k 3; .echo; gc"
bp crypt32!I_CryptInstallOssGlobal ".printf \"xoxo: crypt32.I_CryptInstallOssGlobal\"; k 3; .echo; gc"
bp crypt32!I_CryptReadTrustedPublisherDWORDValueFromRegistry ".printf \"xoxo: crypt32.I_CryptReadTrustedPublisherDWORDValueFromRegistry\"; k 3; .echo; gc"
bp crypt32!I_CryptRegisterSmartCardStore ".printf \"xoxo: crypt32.I_CryptRegisterSmartCardStore\"; k 3; .echo; gc"
bp crypt32!I_CryptReleaseLruEntry ".printf \"xoxo: crypt32.I_CryptReleaseLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptRemoveLruEntry ".printf \"xoxo: crypt32.I_CryptRemoveLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptSetTls ".printf \"xoxo: crypt32.I_CryptSetTls\"; k 3; .echo; gc"
bp crypt32!I_CryptTouchLruEntry ".printf \"xoxo: crypt32.I_CryptTouchLruEntry\"; k 3; .echo; gc"
bp crypt32!I_CryptUninstallAsn1Module ".printf \"xoxo: crypt32.I_CryptUninstallAsn1Module\"; k 3; .echo; gc"
bp crypt32!I_CryptUninstallOssGlobal ".printf \"xoxo: crypt32.I_CryptUninstallOssGlobal\"; k 3; .echo; gc"
bp crypt32!I_CryptUnregisterSmartCardStore ".printf \"xoxo: crypt32.I_CryptUnregisterSmartCardStore\"; k 3; .echo; gc"
bp crypt32!I_CryptWalkAllLruCacheEntries ".printf \"xoxo: crypt32.I_CryptWalkAllLruCacheEntries\"; k 3; .echo; gc"
bp crypt32!I_PFXDecrypt ".printf \"xoxo: crypt32.I_PFXDecrypt\"; k 3; .echo; gc"
bp crypt32!I_PFXHMAC ".printf \"xoxo: crypt32.I_PFXHMAC\"; k 3; .echo; gc"
bp crypt32!I_PFXImportCertStoreEx ".printf \"xoxo: crypt32.I_PFXImportCertStoreEx\"; k 3; .echo; gc"
bp crypt32!PFXExportCertStore ".printf \"xoxo: crypt32.PFXExportCertStore\"; k 3; .echo; gc"
bp crypt32!PFXExportCertStore2 ".printf \"xoxo: crypt32.PFXExportCertStore2\"; k 3; .echo; gc"
bp crypt32!PFXExportCertStoreEx ".printf \"xoxo: crypt32.PFXExportCertStoreEx\"; k 3; .echo; gc"
bp crypt32!PFXImportCertStore ".printf \"xoxo: crypt32.PFXImportCertStore\"; k 3; .echo; gc"
bp crypt32!PFXIsPFXBlob ".printf \"xoxo: crypt32.PFXIsPFXBlob\"; k 3; .echo; gc"
bp crypt32!PFXVerifyPassword ".printf \"xoxo: crypt32.PFXVerifyPassword\"; k 3; .echo; gc"
